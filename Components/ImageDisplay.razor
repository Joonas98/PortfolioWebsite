@namespace Components
@using System.Threading
@using Microsoft.AspNetCore.Components
@implements IDisposable

<div class="image-display @CssClass">
    @if (ImageUrls?.Any() == true)
    {
        @for (int i = 0; i < ImageUrls.Count; i++)
        {
            <img src="@ImageUrls[i]"
                 alt="Slide @(i + 1)"
                 class="slide @(i == currentIndex ? "active" : string.Empty)" />
        }

        @if (ImageUrls.Count > 1)
        {
            <div class="image-controls">
                <button class="control-btn" @onclick="ShowPrevious">Prev</button>
                <span class="indicator">@((currentIndex + 1)) / @ImageUrls.Count</span>
                <button class="control-btn" @onclick="ShowNext">Next</button>
            </div>
        }
    }
</div>

@code {
    [Parameter] public List<string> ImageUrls { get; set; } = new();
    [Parameter] public int SlideInterval { get; set; } = 4000;
    [Parameter] public bool AutoSlide { get; set; } = true;
    [Parameter] public string CssClass { get; set; } = string.Empty;

    private int currentIndex;
    private CancellationTokenSource? _cts;

    protected override void OnInitialized()
    {
        if (AutoSlide && ImageUrls.Count > 1)
        {
            StartAutoSlide();
        }
    }

    private void StartAutoSlide()
    {
        _cts?.Cancel();
        _cts?.Dispose();
        _cts = new CancellationTokenSource();
        _ = AutoLoop(_cts.Token);
    }

    private async Task AutoLoop(CancellationToken token)
    {
        try
        {
            while (!token.IsCancellationRequested)
            {
                await Task.Delay(SlideInterval, token);
                ShowNext();
                StateHasChanged();
            }
        }
        catch (TaskCanceledException) { }
    }

    private void ShowNext()
    {
        currentIndex = (currentIndex + 1) % ImageUrls.Count;
        if (AutoSlide) StartAutoSlide();
    }

    private void ShowPrevious()
    {
        currentIndex = (currentIndex - 1 + ImageUrls.Count) % ImageUrls.Count;
        if (AutoSlide) StartAutoSlide();
    }

    public void Dispose()
    {
        _cts?.Cancel();
        _cts?.Dispose();
    }
}
